# docker-compose.yml

version: '3'

services:

  node.js:
    build:
        context: .
        dockerfile: Dockerfile
    image: nodejs-frontend-ressources
    container_name: node.js
    ports:
      - "3000:3000"
    environment:
      COMPOSE_KEYCLOAK_URL: http://keycloak:8080
      COMPOSE_POSTGREST_URL : http://api:3000
    depends_on:
      - api
      - keycloak

  api:
    image: postgrest/postgrest
    container_name: postgREST
    ports:
      - "${POSTGREST_HOST_PORT}:3000"
    environment:
      PGRST_DB_URI: postgres://${DB_CONN_ROLE}:${DB_CONN_PWD}@db:5432/${POSTGRES_DB}
      PGRST_DB_SCHEMA: ${DB_SCHEMA}
      PGRST_DB_ANON_ROLE: ${DB_ANON_ROLE}
      PGRST_ROLE_CLAIM_KEY: ${PGRST_ROLE_CLAIM_KEY}
      PGRST_JWT_SECRET: ${PGRST_JWT_SECRET}
    depends_on:
      - db

  db:
    image: postgres
    container_name: postgresql
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_SCHEMA: ${DB_SCHEMA}
      DB_ANON_ROLE: ${DB_ANON_ROLE}
      DB_CONN_ROLE: ${DB_CONN_ROLE}
      DB_CONN_PWD: ${DB_CONN_PWD}
    volumes:
    #  - "./pgdata:/var/lib/postgresql/data"
      - "./initdb:/docker-entrypoint-initdb.d"
     
  swagger:
    image: swaggerapi/swagger-ui
    container_name: swagger-ui
    ports:
      - "${SWAGGER_HOST_PORT}:8080"
    environment:
        API_URL: http://localhost:${POSTGREST_HOST_PORT}/

  keycloak:
    image: jboss/keycloak
    container_name: keycloak
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_IMPORT: /tmp/proto.json #a commenter pour init
    volumes:
    #  - "./initkeycloak:/tmp" #a d√©commenter pour init
      - ./initkeycloak/proto.json:/tmp/proto.json #a commenter pour init

  solr:
    image: solr
    container_name: solr 
    ports :
      - 8983:8983
    command:
      - solr-precreate
      - ressources